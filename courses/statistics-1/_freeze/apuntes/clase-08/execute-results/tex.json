{
  "hash": "48530150ba97fd93cc25af7cdc3c0872",
  "result": {
    "markdown": "# Apuntes de clase {-}\n\n## Remuestreo\n\n### Validación Cruzada (CV)\n\n::: {#prp-}\n\nCV **no estima modelos**; estima métricas,\nlas cuales usamos para comparar modelos.\n\nCV nos provee de una **estimación del valor esperado**\nde una métrica (MSE, Accuracy, etc) asociada a un modelo\nde Aprendizaje Estadístico.\n\n:::\n\n\n- Implica **selección**, no *evaluación*, del modelo.\n\n- Es influenciada por la **métrica** fijada para\ncomparar datos (sea accuracy, etc).\n\n### Enfoque para validation set\n\n- Dividimos un conjunto de $n$ observaciones en dos partes:\n    - *Conjunto de entrenaminto* (para **ajustar modelo**)\n    - *Conjunto de validación* (para predecir la *response* de cada observación del validation set)\n\n## Método de retención\n\n### Ejemplo práctico \n\n::: {#prp-}\n\nEl **método de retención** tiene **alto sesgo** \n(pues no se considera TODO el conjunto de datos)\ny **alta variabilidad** (debido a la aleatoriedad).\n\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ISLR2)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ISLR2' was built under R version 4.1.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.1.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggpubr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggpubr' was built under R version 4.1.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(reshape2)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'reshape2' was built under R version 4.1.3\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\nn = dim(Auto)[1]\n\n# 11 veces partiremos los datos en train y test\n# 10 grados de polinomios consideraremos\ntestMSEmat <- matrix(ncol = 11, nrow = 10)\n\nfor (newsample in 1:11) {\n  trainid <- sample(n, n/2)\n  for (polydeg in 1:10) {\n    lm.fit <- lm(\n      mpg ~ poly(horsepower, polydeg),\n      data = Auto,\n      subset = trainid\n    )\n    # Predecimos para los datos de test\n    lm.pred <- predict(lm.fit, Auto)[-trainid]\n    testMSEmat[polydeg, newsample] <- mean((Auto$mpg[-trainid] - lm.pred)^2)\n  }\n}\nyrange <- c(15,28)\n\n# Resultado para la primera selección\nplotdf <- data.frame(\"testMSE\" = testMSEmat[,1], \"degree\" = 1:10)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ng0 <- ggplot(plotdf, aes(x = degree)) +\n  geom_line(y = testMSEmat[,1]) +\n  scale_y_continuous(limits = yrange) +\n  scale_x_continuous(breaks = 1:10) +\n  labs(\n    y = \"MSE de conjunto de validación\", \n    x = \"Grado del Polinomio\"\n  )\n\ng0 + theme_minimal()\n```\n\n::: {.cell-output-display}\n![](clase-08_files/figure-pdf/unnamed-chunk-3-1.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\n# Comparando con las otras muestras\ncols=rainbow(10)\ng1=g0+geom_line(aes(x=1:10,y=testMSEmat[,2]),colour=cols[1])\n\nfor (col in 3:11) {\n  g1 <- g1 + \n    geom_line(\n      aes(x = 1:10, y = testMSEmat[,col]), colour = cols[col - 1]\n    )\n}\n\ng1valid <- g1\ng1valid\n```\n\n::: {.cell-output-display}\n![](clase-08_files/figure-pdf/unnamed-chunk-3-2.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n## LOOCV\n\n- Produce una estimación **más confiables** comparado al\n*método de retención*.\n\n::: {#prp-}\n\n**Poco sesgo**, pues se usa casi todo el conjunto de datos\npara entrenamiento.\n\nEn este caso, se presenta **alta varianza**,\npues la covarianza entre dos training sets (de los $n$ creados)\nes muy alta, pues ser la misma muestra, salvo a lo más dos observaciones.\n\n:::\n\n- $MSE_i = \\left( y_i - \\hat{y_i} \\right)^2$ \n\n- **Error total de predicción**: $CV_n = \\dfrac{1}{n} \\displaystyle{ \\sum_{i=1}^{n}MSE_i }$ \n\n- Funciona **bastante bien para regresión lineal**.\n\n### Ejemplo práctico\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\nn = dim(Auto)[1]\n\ntestMSEvec <- NULL\nstart <- Sys.time()\n\nfor (polydeg in 1:10) {\n  glm.fit = glm(mpg ~ poly(horsepower,polydeg), data = Auto)\n  glm.cv1 = boot::cv.glm(Auto, glm.fit, K = n)\n  # Error cuadrático medio\n  testMSEvec = c(testMSEvec, glm.cv1$delta[1])\n}\nstop = Sys.time()\n\nyrange = c(15, 28)\nplotdf = data.frame(testMSE = testMSEvec, degree = 1:10)\n\ng0 = ggplot(plotdf, aes(x = degree, y = testMSE)) +\n  geom_line() +\n  geom_point() +\n  scale_y_continuous(limits = yrange) +\n  scale_x_continuous(breaks = 1:10) +\n  labs(y = \"LOOCV\")\n\ng0 + theme_minimal()\n```\n\n::: {.cell-output-display}\n![](clase-08_files/figure-pdf/unnamed-chunk-4-1.pdf){fig-pos='H'}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstop - start\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTime difference of 22.63906 secs\n```\n:::\n:::\n\n\n\n## k-fold CV\n\n- Procedimiento:\n    - Dividir los datos en $k$ partes *más o menos* iguales.\n    - Utilizar $k-1$ partes para entrenar la $k$-ésima parte\n    para validar.\n    - Hacer esto $k$ veces, omitiendo otra parte en cada $k$ ronda.\n\n- $CV_k = \\displaystyle{ \\dfrac{1}{k}\\sum_{i=1}^{k} MSE_i}$ \n\n- $CV_k = \\displaystyle{ \\dfrac{1}{n}\\sum_{i=1}^{k} n_i * MSE_i}$ \n\n- Note que el caso $k=n$ consiste es **LOOCV**.\n\n::: {#prp-}\n\nPresenta cierta variabilidad, debido a la aleatoriedad;\ny puede ser alta cuando $k=n$ (caso determinista) incluso.\n\nEl sesgo es menor cuando $k=n$, pero suele usarse $k=5$ o $k=10$ .\n\n:::\n\n### Ejemplo práctico\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\n\ntestMSEvec5 = NULL\ntestMSEvec10 = NULL\nstart = Sys.time()\n\nfor (polydeg in 1:10) {\n  glm.fit = glm(mpg ~ poly(horsepower, polydeg), data = Auto)\n  glm.cv5 = boot::cv.glm(Auto, glm.fit, K = 5)\n  glm.cv10 = boot::cv.glm(Auto, glm.fit, K = 10)\n  testMSEvec5 = c(testMSEvec5, glm.cv5$delta[1])\n  testMSEvec10 = c(testMSEvec10, glm.cv10$delta[1])\n}\n\nstop = Sys.time()\nyrange = c(15,28)\n\nplotdf = data.frame(testMSE5  =testMSEvec5, degree = 1:10)\n\ng0 = ggplot(plotdf, aes(x = degree, y = testMSE5))  +\n  geom_line() +\n  geom_point() +\n  scale_y_continuous(limits = yrange) +\n  scale_x_continuous(breaks = 1:10) +\n  labs(y = \"CV\") +\n  ggtitle(\"5 and 10 fold CV\")\n\ng0 +\n  geom_line(aes(y = testMSEvec10), colour = \"red\") +\n  geom_point(aes(y = testMSEvec10), colour = \"red\") +\n  ggtitle(\"5 fold (black), 10 fold (red)\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](clase-08_files/figure-pdf/unnamed-chunk-6-1.pdf){fig-pos='H'}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstop - start\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTime difference of 0.8634682 secs\n```\n:::\n:::\n\n\n\n\n## Elección del mejor modelo\n\n### Regla del error estándar\n\n\n## Comentarios finales\n\n- Es posible usar $CV$ para la evaluación de modelos,\ntratando a conjuntos de validación como conjuntos de **prueba**.\n\n\n## Bootstrap\n\n- Esta técnica cuantifica la *incertidumbre* asociada a un estimador\no método de aprendizaje estadístico.\n\n- **Sirve para reducir variabilidad**.\n\n\n## Ejemplo práctico: Clasificación de Buenos Pagaderos\n\nUsaremos validación cruzada para **evaluar**, no *seleccionar* modelos.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(Fahrmeir)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'Fahrmeir' was built under R version 4.1.3\n```\n:::\n\n```{.r .cell-code}\ndata(credit)\n# help(credit)\n\nhead(credit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     Y      Cuenta Mes             Ppag         Uso   DM   Sexo         Estc\n1 buen          no  18 pre buen pagador     privado 1049  mujer    vive solo\n2 buen          no   9 pre buen pagador profesional 2799 hombre no vive solo\n3 buen bad running  12 pre buen pagador profesional  841  mujer    vive solo\n4 buen          no  12 pre buen pagador profesional 2122 hombre no vive solo\n5 buen          no  12 pre buen pagador profesional 2171 hombre no vive solo\n6 buen          no  10 pre buen pagador profesional 2241 hombre no vive solo\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\n# Número de folds\nk <- 5\n\nsplitPlan <- vtreat::kWayCrossValidation(nRows = dim(credit)[1], k)\nsplitPlan\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n[[1]]$train\n  [1]    2    3    4    5    6    8    9   11   12   13   14   15   16   17   18\n [16]   20   21   22   23   24   26   27   28   29   30   32   33   35   36   37\n [31]   38   39   41   43   44   45   46   47   48   49   50   51   52   53   54\n [46]   55   56   57   58   60   62   63   64   65   66   68   69   70   71   73\n [61]   74   75   76   77   78   79   80   81   82   83   84   85   89   90   91\n [76]   92   93   94   95   97   98   99  100  101  102  103  105  107  108  109\n [91]  110  111  112  115  117  118  119  120  122  123  124  125  126  127  128\n[106]  129  130  131  132  133  134  137  138  139  140  141  142  143  144  145\n[121]  146  147  148  149  150  151  152  154  155  156  158  159  160  161  162\n[136]  163  164  165  168  170  171  172  173  174  175  176  177  178  179  180\n[151]  182  183  184  186  187  188  190  192  194  195  198  200  201  202  203\n[166]  204  205  206  207  208  209  210  211  212  213  214  215  216  217  220\n[181]  221  222  223  224  225  227  228  229  231  232  233  235  236  237  238\n[196]  239  240  241  244  245  246  247  248  249  250  252  254  255  256  257\n[211]  258  259  260  262  263  264  267  268  269  270  271  272  276  277  278\n[226]  279  280  282  283  284  285  286  287  288  290  292  293  295  296  298\n[241]  299  300  302  303  304  306  307  308  309  310  311  313  314  317  318\n[256]  319  320  321  322  323  324  325  327  328  330  332  333  335  337  338\n[271]  339  340  341  342  343  344  345  346  347  349  351  352  353  355  356\n[286]  358  359  360  361  362  363  364  365  366  368  369  370  371  372  373\n[301]  374  375  376  377  378  379  381  383  386  387  389  391  392  394  395\n[316]  396  397  398  399  400  401  403  405  406  407  408  409  410  412  413\n[331]  414  416  417  418  419  420  421  423  424  426  427  429  430  431  432\n[346]  433  434  435  436  438  439  440  441  442  444  445  446  447  448  449\n[361]  451  452  453  455  457  458  459  460  461  462  464  468  469  470  471\n[376]  475  476  478  479  480  482  484  485  487  488  489  490  491  494  495\n[391]  496  497  498  499  501  502  503  504  505  506  507  508  509  510  513\n[406]  514  516  517  518  519  520  521  523  525  527  530  531  532  533  534\n[421]  535  536  540  541  542  544  545  546  547  548  549  550  551  552  553\n[436]  554  555  556  557  558  560  561  562  563  564  565  566  567  568  569\n[451]  570  571  572  573  574  575  576  577  579  581  582  584  585  586  588\n[466]  589  590  591  593  595  596  597  600  601  602  603  604  605  606  608\n[481]  610  611  612  613  615  617  618  619  620  621  624  625  626  628  629\n[496]  630  632  633  634  635  637  638  639  640  641  642  644  645  646  647\n[511]  648  649  650  652  653  655  656  657  658  659  660  662  663  664  665\n[526]  666  667  668  670  671  672  673  674  675  676  677  678  679  680  682\n[541]  684  685  686  687  688  689  690  691  693  694  695  696  697  698  700\n[556]  701  702  703  705  709  712  713  714  715  716  717  718  719  720  721\n[571]  722  723  724  726  727  728  729  730  731  733  734  735  736  737  738\n[586]  740  741  742  743  744  745  746  747  748  749  750  752  753  755  756\n[601]  757  758  759  760  761  762  763  765  766  767  769  770  771  772  773\n[616]  775  776  777  778  779  780  782  783  785  786  787  789  790  791  792\n[631]  793  794  795  796  798  799  801  803  804  805  806  807  808  809  810\n[646]  812  813  815  818  819  820  821  822  823  824  825  826  827  828  829\n[661]  830  832  834  835  837  838  839  840  841  842  843  844  845  846  847\n[676]  848  849  850  852  853  854  855  856  857  858  859  860  861  862  864\n[691]  865  866  867  868  869  870  871  873  874  875  876  877  878  879  880\n[706]  881  883  884  885  886  887  888  889  890  891  893  894  896  897  898\n[721]  899  901  902  903  904  905  907  908  910  911  912  913  914  915  916\n[736]  917  918  919  920  921  922  923  925  926  927  928  929  930  931  932\n[751]  933  934  935  938  939  940  941  943  944  945  947  948  950  951  952\n[766]  953  954  956  957  959  960  962  964  966  967  969  970  971  972  973\n[781]  974  975  977  978  979  980  983  984  985  986  987  989  990  991  992\n[796]  993  994  998  999 1000\n\n[[1]]$app\n  [1] 623 900 326 382 661 511 578 816 627 811 305 946 136 234 297 522 643 218\n [19] 169 895 961  19 116 390 529 181 474 265  40 450 909 598 995 538 833 708\n [37] 281  10 592 707 350 543 189 291 456 774  59 243 768 607 104  88 294 512\n [55] 486 428 599 166 587 251 463 692  86 681 968 380 654 882 988 357  61  87\n [73] 526 334 367 274 191  67  34 711  31 580 981 651 937 199 454   1 348  25\n [91] 135 631 836 616 814 892 936 477 924 289 942 331 354 963 493 872 329 537\n[109] 121 500 958 996 609 443 422 437 336 955 704 226 481 275 385  42 788 669\n[127] 253 732 472 965   7 725 106 739 754 402 982 153 411 425 114 404 751 483\n[145] 976 851 185 113 781 906 817 764 219 949 524 802 683  72 301 261 388 515\n[163] 710 415 583 528 316 797 157 614 315 784  96 559 622 196 473 467 393 539\n[181] 312 167 863 465 466 800 831 266 492 699 706 384 197 997 242 594 636 273\n[199] 230 193\n\n\n[[2]]\n[[2]]$train\n  [1]    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15\n [16]   16   17   18   19   21   24   25   26   27   28   30   31   32   34   35\n [31]   37   38   39   40   41   42   43   46   47   48   49   50   52   53   54\n [46]   55   56   57   59   61   62   63   64   66   67   68   69   70   72   73\n [61]   74   75   76   77   78   81   82   83   85   86   87   88   89   90   92\n [76]   93   96  101  102  103  104  105  106  107  110  111  113  114  115  116\n [91]  117  119  120  121  122  123  124  125  127  128  129  130  131  134  135\n[106]  136  137  139  141  143  145  146  147  148  149  150  151  152  153  154\n[121]  155  156  157  158  159  160  161  162  163  164  166  167  168  169  170\n[136]  172  173  174  175  176  178  179  180  181  182  185  187  188  189  190\n[151]  191  192  193  194  195  196  197  198  199  200  202  203  205  206  209\n[166]  211  212  213  214  215  216  218  219  220  225  226  227  230  232  233\n[181]  234  235  236  238  239  242  243  247  248  249  250  251  253  255  256\n[196]  257  259  260  261  262  263  265  266  267  269  270  271  272  273  274\n[211]  275  276  277  278  279  281  282  283  285  286  287  288  289  290  291\n[226]  292  293  294  295  297  298  299  300  301  302  304  305  307  308  309\n[241]  310  312  313  314  315  316  317  319  322  323  324  325  326  327  328\n[256]  329  331  332  333  334  335  336  338  339  342  343  344  345  346  347\n[271]  348  350  351  352  353  354  355  356  357  359  362  363  364  365  367\n[286]  368  371  373  374  375  376  377  378  379  380  381  382  383  384  385\n[301]  386  388  389  390  391  392  393  395  396  397  398  399  400  401  402\n[316]  403  404  405  406  407  408  409  410  411  412  415  417  419  422  423\n[331]  424  425  426  428  429  430  431  432  434  435  437  439  440  441  442\n[346]  443  444  445  447  448  449  450  451  452  453  454  455  456  459  460\n[361]  461  463  464  465  466  467  468  469  470  471  472  473  474  475  476\n[376]  477  480  481  482  483  484  486  488  489  490  491  492  493  495  497\n[391]  499  500  506  508  509  511  512  514  515  519  520  521  522  524  525\n[406]  526  527  528  529  530  531  532  533  534  535  536  537  538  539  540\n[421]  542  543  544  545  546  548  550  551  553  554  555  556  557  558  559\n[436]  561  562  564  565  567  568  569  570  571  573  574  575  576  577  578\n[451]  579  580  581  582  583  584  586  587  588  589  590  591  592  594  596\n[466]  598  599  600  601  602  603  604  605  607  609  610  611  612  613  614\n[481]  616  618  619  620  621  622  623  624  626  627  628  629  630  631  632\n[496]  633  634  635  636  637  638  640  641  642  643  644  645  646  647  648\n[511]  650  651  652  654  655  656  657  658  659  660  661  662  663  664  665\n[526]  667  669  670  671  672  673  677  678  680  681  683  684  685  687  688\n[541]  689  690  692  693  694  695  696  697  698  699  700  701  702  703  704\n[556]  705  706  707  708  709  710  711  712  713  714  715  716  717  718  719\n[571]  721  722  723  724  725  726  728  729  731  732  733  735  736  737  738\n[586]  739  741  742  743  744  745  746  747  748  749  751  752  753  754  755\n[601]  756  757  758  759  760  762  763  764  765  766  767  768  769  770  771\n[616]  772  773  774  775  776  777  778  781  783  784  786  787  788  789  790\n[631]  792  795  796  797  798  799  800  801  802  803  805  807  808  809  810\n[646]  811  813  814  815  816  817  818  819  822  824  825  826  827  828  831\n[661]  832  833  834  835  836  837  838  840  841  842  843  844  845  846  848\n[676]  849  850  851  852  853  854  855  856  858  860  861  862  863  864  865\n[691]  866  868  870  872  873  875  876  877  878  879  880  881  882  884  885\n[706]  886  887  888  891  892  894  895  896  897  898  899  900  901  902  903\n[721]  904  906  907  908  909  910  911  912  915  918  919  922  923  924  926\n[736]  927  928  929  930  931  933  934  935  936  937  938  939  940  941  942\n[751]  943  944  946  947  948  949  950  951  952  953  954  955  956  958  959\n[766]  960  961  962  963  964  965  966  967  968  969  970  971  973  974  975\n[781]  976  978  980  981  982  983  984  985  986  987  988  989  990  991  992\n[796]  995  996  997  999 1000\n\n[[2]]$app\n  [1] 284 905  98  79 184 552 479 510 108 740 258 358 221 794 608 208 998 595\n [19] 727  71 485  60 649 993 597 126 779 228 427 541 806 478 142 457 857 296\n [37]  84 675 830 585 303 823 518 171  58  22 804 916 413 921 501 210 945 421\n [55] 361 254 793 920 207 280 231 100  36 138 682 750  97 782 183 118 252 566\n [73] 224 957  95 420 883 791 679 504 821 547 925 349 859 487 165 372 241 201\n [91] 341 563 917 237 893 321 462  51 222 502 730 867 204  29 829 132 340 229\n[109] 223  23 625 523 133 914 366 112  91 593 306 446 311 839 686 264 245  94\n[127] 606 177 676 761 668 268 516 890 394 240 549 869 653 785 615 244 418 436\n[145] 871 414 517 720 780 217  65 932 874 513  33 617 140 913 494 330 503 572\n[163] 433 370 318 337 186 109 387 820 144  45  80 977 972 458 360 812 496 369\n[181] 246 320 847 438 639 691 734  99  20  44 674 507 994 416 560 505 889 498\n[199] 666 979\n\n\n[[3]]\n[[3]]$train\n  [1]    1    3    4    5    6    7    8    9   10   11   12   13   14   15   16\n [16]   17   18   19   20   21   22   23   25   27   28   29   30   31   32   33\n [31]   34   36   37   38   40   41   42   43   44   45   47   50   51   52   53\n [46]   55   56   57   58   59   60   61   62   63   65   66   67   68   69   70\n [61]   71   72   74   75   76   77   78   79   80   84   85   86   87   88   91\n [76]   92   93   94   95   96   97   98   99  100  101  104  105  106  107  108\n [91]  109  112  113  114  115  116  117  118  119  121  122  123  124  125  126\n[106]  127  129  132  133  134  135  136  137  138  139  140  141  142  143  144\n[121]  146  147  148  149  150  151  152  153  155  156  157  159  160  161  162\n[136]  163  164  165  166  167  169  171  172  173  175  176  177  178  180  181\n[151]  182  183  184  185  186  187  189  190  191  192  193  194  195  196  197\n[166]  199  201  203  204  205  206  207  208  210  211  213  214  216  217  218\n[181]  219  221  222  223  224  225  226  227  228  229  230  231  232  233  234\n[196]  235  236  237  238  239  240  241  242  243  244  245  246  247  249  250\n[211]  251  252  253  254  255  256  257  258  260  261  263  264  265  266  267\n[226]  268  269  270  272  273  274  275  276  277  280  281  282  283  284  286\n[241]  287  288  289  291  293  294  295  296  297  298  299  301  303  304  305\n[256]  306  307  308  309  311  312  313  315  316  317  318  319  320  321  322\n[271]  323  324  325  326  329  330  331  332  333  334  335  336  337  338  340\n[286]  341  342  343  345  346  348  349  350  353  354  355  356  357  358  360\n[301]  361  362  363  365  366  367  369  370  371  372  374  375  376  379  380\n[316]  381  382  383  384  385  386  387  388  389  390  391  392  393  394  397\n[331]  398  399  400  402  404  406  409  410  411  413  414  415  416  418  419\n[346]  420  421  422  423  424  425  427  428  430  431  432  433  436  437  438\n[361]  439  442  443  445  446  448  450  453  454  456  457  458  459  460  461\n[376]  462  463  464  465  466  467  469  472  473  474  475  476  477  478  479\n[391]  480  481  482  483  485  486  487  488  492  493  494  496  498  499  500\n[406]  501  502  503  504  505  507  508  509  510  511  512  513  515  516  517\n[421]  518  519  520  521  522  523  524  525  526  528  529  530  532  533  534\n[436]  535  536  537  538  539  540  541  542  543  545  547  548  549  550  551\n[451]  552  553  554  555  557  558  559  560  561  563  566  568  569  570  571\n[466]  572  575  576  578  580  581  583  584  585  586  587  588  589  590  591\n[481]  592  593  594  595  597  598  599  602  603  604  606  607  608  609  612\n[496]  613  614  615  616  617  618  620  621  622  623  624  625  627  630  631\n[511]  633  634  636  637  639  641  642  643  646  647  648  649  650  651  652\n[526]  653  654  655  657  659  661  662  664  665  666  668  669  670  671  672\n[541]  673  674  675  676  677  678  679  681  682  683  685  686  690  691  692\n[556]  693  697  699  700  701  702  703  704  705  706  707  708  710  711  713\n[571]  714  716  717  718  719  720  721  723  724  725  726  727  728  730  732\n[586]  733  734  735  737  738  739  740  741  742  744  745  746  747  749  750\n[601]  751  752  754  756  757  758  760  761  763  764  767  768  769  770  771\n[616]  773  774  776  777  779  780  781  782  783  784  785  786  787  788  791\n[631]  793  794  796  797  798  799  800  801  802  803  804  805  806  809  810\n[646]  811  812  813  814  816  817  818  819  820  821  822  823  824  825  826\n[661]  827  829  830  831  832  833  835  836  837  839  843  844  846  847  849\n[676]  850  851  852  854  855  856  857  858  859  860  861  863  864  865  866\n[691]  867  868  869  871  872  873  874  875  876  878  881  882  883  884  885\n[706]  887  888  889  890  892  893  894  895  896  897  898  900  901  902  903\n[721]  904  905  906  907  909  910  911  912  913  914  916  917  918  919  920\n[736]  921  922  924  925  926  927  928  929  930  931  932  933  934  936  937\n[751]  938  939  940  942  943  945  946  947  948  949  950  951  952  953  954\n[766]  955  957  958  960  961  962  963  965  968  969  971  972  973  976  977\n[781]  978  979  980  981  982  983  985  986  988  990  991  992  993  994  995\n[796]  996  997  998  999 1000\n\n[[3]]$app\n  [1] 848 645 103 974 574 212 605 687 131 840 629 696 736 145 495 959 248 434\n [19] 838 573 667 449 638 102 880 262 828 789 891 497 600 403 444 188 215 328\n [37]  83 964 441 660 841 658 775  39 395 170 417 484 577 405 429 471 601 715\n [55] 886 491 956 378 468 440 564 834 626 344 899 611  49 174 347 271 712 179\n [73] 842 795 755  54 168 935 970 562 531 908 808 845 944 120 198 285 923 879\n [91] 514 565 640 967 632 579 128 689 352 596 546 762 396 377 279 680 792 915\n[109] 656 862 407 941   2 292 412 489 259  35 688 452 619 278 447 110 765 989\n[127] 373 364 772 853  48 339 684 644 753 815 567 610  82 975  64  24 635 987\n[145]  90 426 290 807 709 368 401 698 984 877 748 455 209 202 556 300 694 200\n[163] 731 506 302 154 544 327 722 870 527 582 130  81 111 729 451 490 743 966\n[181] 435 470 663 790 158 766  73  46 408 759  26 778  89 628 314 359 351 310\n[199] 695 220\n\n\n[[4]]\n[[4]]$train\n  [1]   1   2   5   6   7   8   9  10  13  14  15  16  19  20  21  22  23  24\n [19]  25  26  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44\n [37]  45  46  47  48  49  50  51  53  54  55  58  59  60  61  62  63  64  65\n [55]  66  67  68  70  71  72  73  75  76  77  79  80  81  82  83  84  85  86\n [73]  87  88  89  90  91  92  94  95  96  97  98  99 100 101 102 103 104 106\n [91] 108 109 110 111 112 113 114 116 117 118 120 121 122 126 127 128 130 131\n[109] 132 133 134 135 136 138 140 142 143 144 145 146 148 149 151 152 153 154\n[127] 155 156 157 158 159 163 165 166 167 168 169 170 171 174 177 178 179 181\n[145] 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199\n[163] 200 201 202 204 207 208 209 210 212 215 217 218 219 220 221 222 223 224\n[181] 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242\n[199] 243 244 245 246 247 248 251 252 253 254 257 258 259 260 261 262 264 265\n[217] 266 268 270 271 273 274 275 276 278 279 280 281 283 284 285 287 289 290\n[235] 291 292 293 294 295 296 297 298 299 300 301 302 303 305 306 308 310 311\n[253] 312 313 314 315 316 318 319 320 321 322 323 324 325 326 327 328 329 330\n[271] 331 332 333 334 335 336 337 338 339 340 341 344 345 347 348 349 350 351\n[289] 352 354 356 357 358 359 360 361 362 363 364 366 367 368 369 370 371 372\n[307] 373 377 378 379 380 381 382 384 385 386 387 388 390 391 393 394 395 396\n[325] 398 399 400 401 402 403 404 405 407 408 410 411 412 413 414 415 416 417\n[343] 418 420 421 422 423 425 426 427 428 429 430 433 434 435 436 437 438 439\n[361] 440 441 443 444 445 446 447 449 450 451 452 453 454 455 456 457 458 459\n[379] 461 462 463 464 465 466 467 468 470 471 472 473 474 475 476 477 478 479\n[397] 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498\n[415] 499 500 501 502 503 504 505 506 507 510 511 512 513 514 515 516 517 518\n[433] 520 521 522 523 524 526 527 528 529 530 531 532 536 537 538 539 541 543\n[451] 544 545 546 547 549 552 554 555 556 557 558 559 560 562 563 564 565 566\n[469] 567 569 572 573 574 577 578 579 580 581 582 583 585 586 587 589 590 591\n[487] 592 593 594 595 596 597 598 599 600 601 602 605 606 607 608 609 610 611\n[505] 612 613 614 615 616 617 619 622 623 624 625 626 627 628 629 630 631 632\n[523] 635 636 638 639 640 641 642 643 644 645 646 648 649 651 653 654 656 657\n[541] 658 659 660 661 663 664 665 666 667 668 669 674 675 676 679 680 681 682\n[559] 683 684 686 687 688 689 690 691 692 694 695 696 698 699 701 704 705 706\n[577] 707 708 709 710 711 712 713 715 716 717 718 720 722 723 725 727 729 730\n[595] 731 732 733 734 736 737 738 739 740 741 742 743 746 747 748 749 750 751\n[613] 752 753 754 755 758 759 760 761 762 764 765 766 768 772 773 774 775 776\n[631] 777 778 779 780 781 782 784 785 787 788 789 790 791 792 793 794 795 797\n[649] 798 800 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817\n[667] 818 820 821 822 823 826 827 828 829 830 831 833 834 835 836 837 838 839\n[685] 840 841 842 845 847 848 849 850 851 852 853 857 858 859 861 862 863 866\n[703] 867 869 870 871 872 874 875 876 877 879 880 881 882 883 886 887 889 890\n[721] 891 892 893 895 897 898 899 900 901 902 903 905 906 908 909 913 914 915\n[739] 916 917 919 920 921 923 924 925 927 932 935 936 937 941 942 943 944 945\n[757] 946 947 949 950 951 953 954 955 956 957 958 959 961 962 963 964 965 966\n[775] 967 968 970 972 973 974 975 976 977 979 981 982 984 986 987 988 989 990\n[793] 991 992 993 994 995 996 997 998\n\n[[4]]$app\n  [1]  918  934  726  884    4  952  634  424  343  928  985  307  561  123  534\n [16]  854  365  757  508  864  460  548  670  214  160  442  868  983  249  697\n [31]  888  375  844  432  540  147  250  431  938   12  678  107  978  216  980\n [46]  588  904  203  542  397  205  671  309  878  480  896  677  735  105  389\n [61]  939  141  907  211  948  929  469  885   74  551  652  272  164  576  269\n [76]  383  693  771  277  673  796  724   11  745  930  346  637  535  922  419\n [91]  161  763  206  286  604 1000  603  672  376  150  700  374   57  662  570\n[106]  263  618  655  911  769  176  933  756  719  912  124  999   17  931  304\n[121]  873  940  267  509  894  568  550  584  728    3  448   28  392   27  525\n[136]  926  702  647  353  119  620  832   52  824  721  575  825  355  971  162\n[151]  783  786  125  819  137  553  172  175  846  571  115  770  843  801  409\n[166]  255  519   56  856  342  714  406   93  213  180   78  256  799  129  865\n[181]  633  139  855  621  703  744  317  860  650  533   18   69  969  282  173\n[196]  767  960  288  910  685\n\n\n[[5]]\n[[5]]$train\n  [1]    1    2    3    4    7   10   11   12   17   18   19   20   22   23   24\n [16]   25   26   27   28   29   31   33   34   35   36   39   40   42   44   45\n [31]   46   48   49   51   52   54   56   57   58   59   60   61   64   65   67\n [46]   69   71   72   73   74   78   79   80   81   82   83   84   86   87   88\n [61]   89   90   91   93   94   95   96   97   98   99  100  102  103  104  105\n [76]  106  107  108  109  110  111  112  113  114  115  116  118  119  120  121\n [91]  123  124  125  126  128  129  130  131  132  133  135  136  137  138  139\n[106]  140  141  142  144  145  147  150  153  154  157  158  160  161  162  164\n[121]  165  166  167  168  169  170  171  172  173  174  175  176  177  179  180\n[136]  181  183  184  185  186  188  189  191  193  196  197  198  199  200  201\n[151]  202  203  204  205  206  207  208  209  210  211  212  213  214  215  216\n[166]  217  218  219  220  221  222  223  224  226  228  229  230  231  234  237\n[181]  240  241  242  243  244  245  246  248  249  250  251  252  253  254  255\n[196]  256  258  259  261  262  263  264  265  266  267  268  269  271  272  273\n[211]  274  275  277  278  279  280  281  282  284  285  286  288  289  290  291\n[226]  292  294  296  297  300  301  302  303  304  305  306  307  309  310  311\n[241]  312  314  315  316  317  318  320  321  326  327  328  329  330  331  334\n[256]  336  337  339  340  341  342  343  344  346  347  348  349  350  351  352\n[271]  353  354  355  357  358  359  360  361  364  365  366  367  368  369  370\n[286]  372  373  374  375  376  377  378  380  382  383  384  385  387  388  389\n[301]  390  392  393  394  395  396  397  401  402  403  404  405  406  407  408\n[316]  409  411  412  413  414  415  416  417  418  419  420  421  422  424  425\n[331]  426  427  428  429  431  432  433  434  435  436  437  438  440  441  442\n[346]  443  444  446  447  448  449  450  451  452  454  455  456  457  458  460\n[361]  462  463  465  466  467  468  469  470  471  472  473  474  477  478  479\n[376]  480  481  483  484  485  486  487  489  490  491  492  493  494  495  496\n[391]  497  498  500  501  502  503  504  505  506  507  508  509  510  511  512\n[406]  513  514  515  516  517  518  519  522  523  524  525  526  527  528  529\n[421]  531  533  534  535  537  538  539  540  541  542  543  544  546  547  548\n[436]  549  550  551  552  553  556  559  560  561  562  563  564  565  566  567\n[451]  568  570  571  572  573  574  575  576  577  578  579  580  582  583  584\n[466]  585  587  588  592  593  594  595  596  597  598  599  600  601  603  604\n[481]  605  606  607  608  609  610  611  614  615  616  617  618  619  620  621\n[496]  622  623  625  626  627  628  629  631  632  633  634  635  636  637  638\n[511]  639  640  643  644  645  647  649  650  651  652  653  654  655  656  658\n[526]  660  661  662  663  666  667  668  669  670  671  672  673  674  675  676\n[541]  677  678  679  680  681  682  683  684  685  686  687  688  689  691  692\n[556]  693  694  695  696  697  698  699  700  702  703  704  706  707  708  709\n[571]  710  711  712  714  715  719  720  721  722  724  725  726  727  728  729\n[586]  730  731  732  734  735  736  739  740  743  744  745  748  750  751  753\n[601]  754  755  756  757  759  761  762  763  764  765  766  767  768  769  770\n[616]  771  772  774  775  778  779  780  781  782  783  784  785  786  788  789\n[631]  790  791  792  793  794  795  796  797  799  800  801  802  804  806  807\n[646]  808  811  812  814  815  816  817  819  820  821  823  824  825  828  829\n[661]  830  831  832  833  834  836  838  839  840  841  842  843  844  845  846\n[676]  847  848  851  853  854  855  856  857  859  860  862  863  864  865  867\n[691]  868  869  870  871  872  873  874  877  878  879  880  882  883  884  885\n[706]  886  888  889  890  891  892  893  894  895  896  899  900  904  905  906\n[721]  907  908  909  910  911  912  913  914  915  916  917  918  920  921  922\n[736]  923  924  925  926  928  929  930  931  932  933  934  935  936  937  938\n[751]  939  940  941  942  944  945  946  948  949  952  955  956  957  958  959\n[766]  960  961  963  964  965  966  967  968  969  970  971  972  974  975  976\n[781]  977  978  979  980  981  982  983  984  985  987  988  989  993  994  995\n[796]  996  997  998  999 1000\n\n[[5]]$app\n  [1] 101 400 602 270 991 195 901 379  41 298 182 902 313 776 803 569 665 760\n [19] 276 986 954 887 319 826  77 642 163 646 953 992 363 335 659 488 613 701\n [37] 876  30 345 293 338 752  43 747 737  63  70 227 476 716 475  66 897 430\n [55]  15 178 194 155 482 499 827 962 362 461 758 371 260 554 777 738 459  76\n [73]  13 545  53 657 630 530 947 648 127 308 149 717 235 439 152 399 557 881\n [91]  75 733 192 143 852 586 612 295  85 159 299 391 835  55 190 866 238 809\n[109] 187 536 818 520  38 973  21 356 453 903  32 225 927 837 749 591 423 532\n[127] 705 773  14 122 664 943  37 875 718 742 590 555 283   6 898 287 521 741\n[145] 624 861 805 333 813  62 323  16 117 445 810 850   5 849   8 950 233 787\n[163] 410 581 464 558  68 151 325 257 239 332 148 322 951  47 324  92  50 146\n[181] 746 858 398 919 798 822 381 990 589 386 690 713 134 236   9 156 232 723\n[199] 641 247\n\n\nattr(,\"splitmethod\")\n[1] \"kwaycross\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntestAUCCV5 <- NULL\ntestLogLossCV5 <- NULL\nsplitPlan[[1]]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$train\n  [1]    2    3    4    5    6    8    9   11   12   13   14   15   16   17   18\n [16]   20   21   22   23   24   26   27   28   29   30   32   33   35   36   37\n [31]   38   39   41   43   44   45   46   47   48   49   50   51   52   53   54\n [46]   55   56   57   58   60   62   63   64   65   66   68   69   70   71   73\n [61]   74   75   76   77   78   79   80   81   82   83   84   85   89   90   91\n [76]   92   93   94   95   97   98   99  100  101  102  103  105  107  108  109\n [91]  110  111  112  115  117  118  119  120  122  123  124  125  126  127  128\n[106]  129  130  131  132  133  134  137  138  139  140  141  142  143  144  145\n[121]  146  147  148  149  150  151  152  154  155  156  158  159  160  161  162\n[136]  163  164  165  168  170  171  172  173  174  175  176  177  178  179  180\n[151]  182  183  184  186  187  188  190  192  194  195  198  200  201  202  203\n[166]  204  205  206  207  208  209  210  211  212  213  214  215  216  217  220\n[181]  221  222  223  224  225  227  228  229  231  232  233  235  236  237  238\n[196]  239  240  241  244  245  246  247  248  249  250  252  254  255  256  257\n[211]  258  259  260  262  263  264  267  268  269  270  271  272  276  277  278\n[226]  279  280  282  283  284  285  286  287  288  290  292  293  295  296  298\n[241]  299  300  302  303  304  306  307  308  309  310  311  313  314  317  318\n[256]  319  320  321  322  323  324  325  327  328  330  332  333  335  337  338\n[271]  339  340  341  342  343  344  345  346  347  349  351  352  353  355  356\n[286]  358  359  360  361  362  363  364  365  366  368  369  370  371  372  373\n[301]  374  375  376  377  378  379  381  383  386  387  389  391  392  394  395\n[316]  396  397  398  399  400  401  403  405  406  407  408  409  410  412  413\n[331]  414  416  417  418  419  420  421  423  424  426  427  429  430  431  432\n[346]  433  434  435  436  438  439  440  441  442  444  445  446  447  448  449\n[361]  451  452  453  455  457  458  459  460  461  462  464  468  469  470  471\n[376]  475  476  478  479  480  482  484  485  487  488  489  490  491  494  495\n[391]  496  497  498  499  501  502  503  504  505  506  507  508  509  510  513\n[406]  514  516  517  518  519  520  521  523  525  527  530  531  532  533  534\n[421]  535  536  540  541  542  544  545  546  547  548  549  550  551  552  553\n[436]  554  555  556  557  558  560  561  562  563  564  565  566  567  568  569\n[451]  570  571  572  573  574  575  576  577  579  581  582  584  585  586  588\n[466]  589  590  591  593  595  596  597  600  601  602  603  604  605  606  608\n[481]  610  611  612  613  615  617  618  619  620  621  624  625  626  628  629\n[496]  630  632  633  634  635  637  638  639  640  641  642  644  645  646  647\n[511]  648  649  650  652  653  655  656  657  658  659  660  662  663  664  665\n[526]  666  667  668  670  671  672  673  674  675  676  677  678  679  680  682\n[541]  684  685  686  687  688  689  690  691  693  694  695  696  697  698  700\n[556]  701  702  703  705  709  712  713  714  715  716  717  718  719  720  721\n[571]  722  723  724  726  727  728  729  730  731  733  734  735  736  737  738\n[586]  740  741  742  743  744  745  746  747  748  749  750  752  753  755  756\n[601]  757  758  759  760  761  762  763  765  766  767  769  770  771  772  773\n[616]  775  776  777  778  779  780  782  783  785  786  787  789  790  791  792\n[631]  793  794  795  796  798  799  801  803  804  805  806  807  808  809  810\n[646]  812  813  815  818  819  820  821  822  823  824  825  826  827  828  829\n[661]  830  832  834  835  837  838  839  840  841  842  843  844  845  846  847\n[676]  848  849  850  852  853  854  855  856  857  858  859  860  861  862  864\n[691]  865  866  867  868  869  870  871  873  874  875  876  877  878  879  880\n[706]  881  883  884  885  886  887  888  889  890  891  893  894  896  897  898\n[721]  899  901  902  903  904  905  907  908  910  911  912  913  914  915  916\n[736]  917  918  919  920  921  922  923  925  926  927  928  929  930  931  932\n[751]  933  934  935  938  939  940  941  943  944  945  947  948  950  951  952\n[766]  953  954  956  957  959  960  962  964  966  967  969  970  971  972  973\n[781]  974  975  977  978  979  980  983  984  985  986  987  989  990  991  992\n[796]  993  994  998  999 1000\n\n$app\n  [1] 623 900 326 382 661 511 578 816 627 811 305 946 136 234 297 522 643 218\n [19] 169 895 961  19 116 390 529 181 474 265  40 450 909 598 995 538 833 708\n [37] 281  10 592 707 350 543 189 291 456 774  59 243 768 607 104  88 294 512\n [55] 486 428 599 166 587 251 463 692  86 681 968 380 654 882 988 357  61  87\n [73] 526 334 367 274 191  67  34 711  31 580 981 651 937 199 454   1 348  25\n [91] 135 631 836 616 814 892 936 477 924 289 942 331 354 963 493 872 329 537\n[109] 121 500 958 996 609 443 422 437 336 955 704 226 481 275 385  42 788 669\n[127] 253 732 472 965   7 725 106 739 754 402 982 153 411 425 114 404 751 483\n[145] 976 851 185 113 781 906 817 764 219 949 524 802 683  72 301 261 388 515\n[163] 710 415 583 528 316 797 157 614 315 784  96 559 622 196 473 467 393 539\n[181] 312 167 863 465 466 800 831 266 492 699 706 384 197 997 242 594 636 273\n[199] 230 193\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfor(i in 1:k) {\n  split <- splitPlan[[i]]\n  modelo_logistic <- glm(Y ~ ., \n    family = binomial, data = credit[split$train,]\n  )\n  yprob <- predict(modelo_logistic, \n    newdata = credit[split$app,],\n    type = \"response\"\n  )\n  \n  testLogLossCV5[i] <- MLmetrics::LogLoss(\n    yprob, as.numeric(credit[split$app,]$Y) - 1\n  )\n  testAUCCV5[i] <- MLmetrics::AUC(\n    yprob, as.numeric(credit[split$app,]$Y) - 1\n  )\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# LogLoss\ntestLogLossCV5\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.5435299 0.4626547 0.4954209 0.5635933 0.5354452\n```\n:::\n\n```{.r .cell-code}\nmean(testLogLossCV5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.5201288\n```\n:::\n\n```{.r .cell-code}\n# AUC\ntestAUCCV5\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.7083968 0.8068239 0.8152420 0.7507799 0.7421078\n```\n:::\n\n```{.r .cell-code}\nmean(testAUCCV5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.7646701\n```\n:::\n:::\n\n\n\n\n## Ejemplo práctico: Calibración de hiperparámetros de KNN\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndiabetes <- read.csv(\n  \"../datos/DiabetesTrain.csv\", stringsAsFactors = TRUE\n)\nhead(diabetes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  glucose insulin sspg  class\n1      97     289  117 normal\n2     105     319  143 normal\n3      90     356  199 normal\n4      90     323  240 normal\n5      86     381  157 normal\n6     100     350  221 normal\n```\n:::\n:::\n\n\n\n### Validación Cruzada (LOOCV)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(007)\nmean(\n  class::knn.cv(\n    train = diabetes[,1:3], cl = diabetes[,4], k = 1\n  ) == diabetes[,4]\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.8869565\n```\n:::\n\n```{.r .cell-code}\nmean(\n  class::knn.cv(\n    train = diabetes[,1:3], cl = diabetes[,4], k = 3\n  ) == diabetes[,4]\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.9043478\n```\n:::\n\n```{.r .cell-code}\nmean(\n  class::knn.cv(\n    train = diabetes[,1:3], cl = diabetes[,4], k = 5\n  ) == diabetes[,4]\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.8956522\n```\n:::\n\n```{.r .cell-code}\nmean(\n  class::knn.cv(\n    train = diabetes[,1:3], cl = diabetes[,4], k = 7\n  ) == diabetes[,4]\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.8956522\n```\n:::\n\n```{.r .cell-code}\nmean(\n  class::knn.cv(\n    train = diabetes[,1:3], cl = diabetes[,4], k = 9\n  ) == diabetes[,4]\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.8956522\n```\n:::\n\n```{.r .cell-code}\nmean(\n  class::knn.cv(\n    train = diabetes[,1:3], cl = diabetes[,4], k = 11\n  ) == diabetes[,4]\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.8869565\n```\n:::\n\n```{.r .cell-code}\nmean(\n  class::knn.cv(\n    train = diabetes[,1:3], cl = diabetes[,4], k = 13\n  ) == diabetes[,4]\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.8956522\n```\n:::\n\n```{.r .cell-code}\nmean(\n  class::knn.cv(\n    train = diabetes[,1:3], cl = diabetes[,4], k = 15\n  ) == diabetes[,4]\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.8782609\n```\n:::\n:::\n\n\n\n\n## Examen Parcial\n\nHasta este punto viene el examen.\n\nLa primera parte es de pregunta-respuesta múltiple.\nLa segunda parte es con **R** (vale 10 puntos o menos).\n\nEl examen suele durar 3 o menos horas.\n\n**Puedes traer tu máquina para el examen**.\n",
    "supporting": [
      "clase-08_files\\figure-pdf"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}