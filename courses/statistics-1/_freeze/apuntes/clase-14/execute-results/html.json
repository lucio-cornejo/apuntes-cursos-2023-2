{
  "hash": "c975f103aded900cfe49145ca59bd0bf",
  "result": {
    "markdown": "# Apuntes de clase {-}\n\n## Conglomerados\n\n- **Goal:** Agrupar observaciones, de modo que\ncierta **distancia** entre observaciones, por grupo,\nsea minimizada.\n\n### Intro\n\n- **Clustering** es una herramienta para **anáisis descriptivo**.\n- El objetivo principal es **encontrar subgrupos homogéneos**.\n\n- Se busca que observaciones del mismo grupo sean similares;\nmientras que, de grupos distintos, sean diferentes.\n\n- Clustering no es clasificar, pues no hay variables dependiente.\n- Por lo general, no es adecuado comparar cluster algorithms diferentes.\n\n- Clustering también puede servir para **reducir el tamaño de un conjunto de datos**.\n\n### Tipos de Análisis Cluster\n\n- Cluster jerárquico\n- Cluster Bayesiano\n- Cluster particional\n\n### Problemas comunes\n\n- Problemas principales: \n    - **Aglutinación**: Ocurre cuando \n    un **objeto puede pertenecer a más de un cluster**.  \n    Para mitigar esta situación, se usan **algoritmos difusos**.\n    - **Disección**: Ocurre cuando la población\n    asociada a los datos **no contiene clusters significativos**.\n\n- Presencia de outliers.\n\n- Datos no normalizados (no tener misma escala).\n\n### Similaridad, distancia y proximidad\n\n- **Medida o función de similaridad**:\n    - Cuantifica similaridad entre objetos.\n    - A mayor valor, objetos más similares.\n    - Usualmente es un valor entre 0 (no similaridad)\n    y 1 (objetos completamente similares.)\n\n- **Distancia** (medida de disimilaridad):\n    - Indica qué tan diferentes son los datos.\n    - Menor valor, objeto smás parecidos.\n    - Mínimo valor de disimilaridad suele ser 0.\n    - Rango suele ser $\\left[0; 1\\right]$ o $\\left[0; \\infty \\right($  \n\n- **Proximidad**: Se refiere usualmente tanto a la similaridad como a la\ndisimilaridad.\n\n### Matriz de distancias (disimilaridad)\n\n- Matriz $n\\times n$ donde se registran las distancias $d \\left( i, j \\right)$ .\n- **Usualmente simétrica** (no siempre).\n\n::: {#prp}\n\nLas funciones de distancias son usualmente distintas para variables de\ntipo cuantitativa o categórica.\n\n:::\n\n### Distancias con datos numéricos: \n\n- **Distancias de Minkowski**: Sí es una métrica matemática. \n$$\nd \\left( i, j \\right) = \\left( \\sum_{k=1}^{M} | x_{ik} - x_{jk} |^p \\right)^{\\dfrac{1}{p}},\n$$\n\ndonde los datos pertenecen a $\\mathbb{R}^M$, y $p$ es el orden de la distancia ($L_p norm$ ).\n\n- **Distancia de Canberra**\n\n### Distancias con datos mixtos\n\n- **Distancia de Gower** (el profesor no recomienda usar esta distancia,\ndice que no tiene un sustento robusto, a menos que no tengamos una mejor opción)\n\n- Como alternativa, el profesor recomienda usar un **MD Cluster**.\n\n## Ejemplo práctico\n\n### Distancias\n\n#### Datos numéricos\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Base R\nset.seed(666)\n\nx <- matrix(rnorm(20), nrow = 5)\ndist(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         1        2        3        4\n2 4.700411                           \n3 2.344002 3.615848                  \n4 4.833851 1.521420 3.768408         \n5 3.777519 4.809694 2.184675 5.137616\n```\n:::\n\n```{.r .cell-code}\ndist(x, method = \"manhattan\", diag = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         1        2        3        4        5\n1 0.000000                                    \n2 8.180026 0.000000                           \n3 4.375477 6.021439 0.000000                  \n4 8.202318 1.990697 6.885186 0.000000         \n5 6.648528 7.471869 3.794025 9.218155 0.000000\n```\n:::\n\n```{.r .cell-code}\ndist(x, method = \"maximum\", upper = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         1        2        3        4        5\n1          3.920273 1.560916 3.870199 2.970185\n2 3.920273          2.634884 1.440753 4.231229\n3 1.560916 2.634884          2.584809 1.861740\n4 3.870199 1.440753 2.584809          4.245042\n5 2.970185 4.231229 1.861740 4.245042         \n```\n:::\n:::\n\n\n**La función `dist` solo funciona con datos numéricos.**\n\n#### Datos numéricos y categóricos\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(cluster)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'cluster' was built under R version 4.1.3\n```\n:::\n\n```{.r .cell-code}\ndaisy(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDissimilarities :\n         1        2        3        4\n2 4.700411                           \n3 2.344002 3.615848                  \n4 4.833851 1.521420 3.768408         \n5 3.777519 4.809694 2.184675 5.137616\n\nMetric :  euclidean \nNumber of objects : 5\n```\n:::\n\n```{.r .cell-code}\nx <- cbind(rnorm(10), sample(1:3,10, replace = TRUE))\nx <- as.data.frame(x)\nx[,2] <- as.factor(x[,2])\ndaisy(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDissimilarities :\n             1           2           3           4           5           6\n2  0.080941937                                                            \n3  0.323301658 0.404243594                                                \n4  0.062576004 0.143517940 0.260725654                                    \n5  0.619146631 0.700088568 0.704155027 0.556570628                        \n6  0.630276188 0.549334251 0.953577846 0.692852192 0.249422819            \n7  0.071644082 0.009297854 0.394945740 0.134220086 0.690790714 0.558632106\n8  0.676698342 0.595756406 1.000000000 0.739274346 0.295844973 0.046422154\n9  0.061087567 0.019854370 0.384389225 0.123663570 0.680234198 0.569188621\n10 0.107313820 0.026371883 0.430615478 0.169889823 0.726460451 0.522962368\n             7           8           9\n2                                     \n3                                     \n4                                     \n5                                     \n6                                     \n7                                     \n8  0.605054260                        \n9  0.010556516 0.615610775            \n10 0.035669737 0.569384522 0.046226253\n\nMetric :  mixed ;  Types = I, N \nNumber of objects : 10\n```\n:::\n:::\n\n\n### Métodos de Particionamiento\n\n- Los datos son particionados en un número $K$ fijado de conglomerados.\n- Luego, iterativamente se va reasignando las observaciones a los conglomerados hasta que algún **criterio de parada** (función a optimizar) se satisface, o, se cumplió el número **máximo fijado de iteraciones**.\n\n#### Método K-means\n\n\n::: {#prp}\n\nSe recomienda **normalizar** las variables antes de\nimplementar este algoritmo.\n\n:::\n\n- Centroide es un representate del cluster al que pertenece.\n\n- **Metodología**: \n    1. Asigna aleatoriamente un número, de 1 a $K$ , a cada una de las observaciones.\n    1. Iterar hasta que la asignación de los cluster deje de cambiar\n        1. Para cada uno de los $K$ cluster, calcular el centroide. El k-ésimo centroide es el vector con las $p$ medias de las variables para las observaciones en el k-ésimo cluster.\n        1. Asignar cada observación al cluster donde el entroide esté más cerca (donde cercanía se encuentra definida por la distancia Euclidiana).\n\n- Al inicio, el centroide es una observación; para las siguientes\niteraciones, most likely ya no.\n\n- El algoritmo anterior garantiza que el valor del objetivo \nasociado a este modelo **decrezca en cada etapa**.\n\n- Este algoritmo es **computacionalmente rápido**; usualmente\nse fija 20 o 25 como el **máximo de iteraciones**.\n\n- Cambiando la métrica usada para la función objetivo,\nse pueden obtener diferentes clusters.\n\n- **Desventajas**:\n    - Usualmente **no** se encuentra un **óptimo global**,\n    solo **óptimo local**; pero esto puede mitigarse permitiendo\n    un mayor número de iteraciones del loop del algoritmo.\n    - Es **sensible a outliers**, debido al uso de medias;\n    pero se puede mitigar vía el uso de **mediodes** (usar\n    mediana en vez de media), empleando la métrica $L_1$\n    en vez de $L_2$ también.\n\n## Ejemplo práctico: K-means\n\n### Datos no normalizados\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(007)\nx <- cbind(\n  rnorm(100,1000,100), c(rnorm(50), rnorm(50,10,1))\n)\nplot(x, pch = 16)\n```\n\n::: {.cell-output-display}\n![](clase-14_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#k-means datos originales\nres <- kmeans(x, 2)\nplot(x, col = c(\"green\",\"red\")[res$cluster], pch = 16)\n```\n\n::: {.cell-output-display}\n![](clase-14_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n:::\n\n\n### Datos normalizados\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Estandarización\nxs <- scale(x)\nplot(xs, pch = 16)\n```\n\n::: {.cell-output-display}\n![](clase-14_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#k-means datos estandarizados\nres <- kmeans(xs, 2)\nplot(x, col = c(\"green\",\"red\")[res$cluster], pch = 16)\n```\n\n::: {.cell-output-display}\n![](clase-14_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n:::\n\n\n## Ejemplo práctico: K-means\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(foreign)\ndistritos=read.spss(\n  \"../datos/distritos.sav\",\n  use.value.labels = TRUE, max.value.labels = Inf, \n  to.data.frame = TRUE\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nre-encoding from CP1252\n```\n:::\n\n```{.r .cell-code}\ncolnames(distritos) <- tolower(colnames(distritos))\nnombres  = distritos[,1]\ndistritos = distritos[,-1]\nrownames(distritos) = nombres\nhead(distritos)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                               ocu_vivi pobpjov sinelect sinagua pea1619\nAte                                1.15     5.3    27.60   51.10     3.9\nBarranco                           1.09     4.5     1.59    8.32     0.8\nBreña                              1.08     4.4     2.20   23.15     0.9\nCarabayllo                         1.10     5.1    30.13   38.09     4.5\nComas                              1.20     5.9    10.92   24.27     3.8\nChorrillos                         1.15     5.5    16.77   37.11     3.2\n                               pocprin peam15\nAte                                1.1  63.48\nBarranco                           3.9  33.48\nBreña                              4.0  37.89\nCarabayllo                        12.6  63.65\nComas                              9.4  60.37\nChorrillos                        10.6  18.78\n```\n:::\n\n```{.r .cell-code}\nres <- kmeans(scale(distritos), 2)\nres\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nK-means clustering with 2 clusters of sizes 15, 19\n\nCluster means:\n    ocu_vivi    pobpjov   sinelect    sinagua    pea1619    pocprin     peam15\n1  0.6635316  0.7536352  0.8957621  0.7981240  0.9978041  0.7677947  0.8420238\n2 -0.5238407 -0.5949751 -0.7071806 -0.6300979 -0.7877401 -0.6061537 -0.6647556\n\nClustering vector:\nAte                            Barranco                       \n                             1                              2 \nBreña                          Carabayllo                     \n                             2                              1 \nComas                          Chorrillos                     \n                             1                              1 \nAgustino                       Independencia                  \n                             1                              1 \nJesús María                    La Victoria                    \n                             2                              2 \nLima                           Lince                          \n                             2                              2 \nLos Olivos                     Lurigancho-Chosica             \n                             1                              1 \nMagdalena del Mar              Pueblo Libre                   \n                             2                              2 \nMiraflores                     Rímac                          \n                             2                              2 \nSan Borja                      San Isidro                     \n                             2                              2 \nSan Juan de Lurigancho         San Juan de Miraflores         \n                             1                              1 \nSan Luis                       San Martin de Porres           \n                             2                              1 \nSan Miguel                     Santa Anita                    \n                             2                              1 \nSurco                          Surquillo                      \n                             2                              2 \nVilla el Salvador              Villa María del Triunfo        \n                             1                              2 \nCallao                         Carmen de la Legua             \n                             1                              1 \nLa Perla                       La Punta                       \n                             2                              2 \n\nWithin cluster sum of squares by cluster:\n[1] 67.25282 36.46842\n (between_SS / total_SS =  55.1 %)\n\nAvailable components:\n\n[1] \"cluster\"      \"centers\"      \"totss\"        \"withinss\"     \"tot.withinss\"\n[6] \"betweenss\"    \"size\"         \"iter\"         \"ifault\"      \n```\n:::\n:::\n\n\n### Determinar número de conglomerados\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Suma de cuadrados dentro de clusters\nwss <- numeric()\nfor (h in 2:10) {\n  # Importante el argumento nstart ene este caso,\n  # para que los elementos de wss decrezcan\n  b <- kmeans(scale(distritos),h, nstart = 50)\n  wss[h-1] <- b$tot.withinss\n}\nplot(2:10, wss, type = \"b\")\n```\n\n::: {.cell-output-display}\n![](clase-14_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Silueta\ndiss.distritos = daisy(scale(distritos))\npar(mfrow = c(1,3))\nfor(h in 2:4) {\n  res <- kmeans(scale(distritos), h)\n  plot(silhouette(\n    # Vector que indica a qué conglomerado pertenece cada observación\n    res$cluster,\n    # Matriz de disimilaridad (que usaste en K-means)\n    diss.distritos\n  ))\n\n  # En caso se tengan demasiadas observaciones\n  print(summary(silhouette(res$cluster, diss.distritos)))\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSilhouette of 34 units in 2 clusters from silhouette.default(x = res$cluster, dist = diss.distritos) :\n Cluster sizes and average silhouette widths:\n       19        15 \n0.5706235 0.3463122 \nIndividual silhouette widths:\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.00153  0.39015  0.46612  0.47166  0.63262  0.70602 \n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nSilhouette of 34 units in 3 clusters from silhouette.default(x = res$cluster, dist = diss.distritos) :\n Cluster sizes and average silhouette widths:\n        12          9         13 \n0.51025714 0.09804962 0.28793020 \nIndividual silhouette widths:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n-0.1829  0.1781  0.3525  0.3161  0.4641  0.6413 \n```\n:::\n\n::: {.cell-output-display}\n![](clase-14_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nSilhouette of 34 units in 4 clusters from silhouette.default(x = res$cluster, dist = diss.distritos) :\n Cluster sizes and average silhouette widths:\n        9         9         5        11 \n0.2352400 0.2527997 0.4144512 0.4409134 \nIndividual silhouette widths:\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.02978  0.22634  0.35484  0.33278  0.44000  0.59277 \n```\n:::\n\n```{.r .cell-code}\npar(mfrow = c(1,1))\n```\n:::\n\n\n::: {#prp}\n\nEl valor **Mean** de la sección **Individual silhouette widths**\ndel resultado de `summary`, es el indicador que usaríamos\npara saber qué tan bien se realizó el clustering.\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Criterio de Calinski-Harabasz\nlibrary(fpc)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'fpc' was built under R version 4.1.3\n```\n:::\n\n```{.r .cell-code}\nch <- numeric()\nfor (h in 2:10) {\n  res <- kmeans(scale(distritos),h,nstart = 100)\n  ch[h-1] <- calinhara(scale(distritos),res$cluster)\n}\nplot(\n  2:10,ch,type=\"b\",xlab=\"k\",\n  ylab=\"Criterio de Calinski-Harabasz\"\n)\n```\n\n::: {.cell-output-display}\n![](clase-14_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Criterio de Calinski-Harabasz\nkmeansruns(scale(distritos),criterion=\"ch\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nK-means clustering with 2 clusters of sizes 15, 19\n\nCluster means:\n    ocu_vivi    pobpjov   sinelect    sinagua    pea1619    pocprin     peam15\n1  0.6635316  0.7536352  0.8957621  0.7981240  0.9978041  0.7677947  0.8420238\n2 -0.5238407 -0.5949751 -0.7071806 -0.6300979 -0.7877401 -0.6061537 -0.6647556\n\nClustering vector:\nAte                            Barranco                       \n                             1                              2 \nBreña                          Carabayllo                     \n                             2                              1 \nComas                          Chorrillos                     \n                             1                              1 \nAgustino                       Independencia                  \n                             1                              1 \nJesús María                    La Victoria                    \n                             2                              2 \nLima                           Lince                          \n                             2                              2 \nLos Olivos                     Lurigancho-Chosica             \n                             1                              1 \nMagdalena del Mar              Pueblo Libre                   \n                             2                              2 \nMiraflores                     Rímac                          \n                             2                              2 \nSan Borja                      San Isidro                     \n                             2                              2 \nSan Juan de Lurigancho         San Juan de Miraflores         \n                             1                              1 \nSan Luis                       San Martin de Porres           \n                             2                              1 \nSan Miguel                     Santa Anita                    \n                             2                              1 \nSurco                          Surquillo                      \n                             2                              2 \nVilla el Salvador              Villa María del Triunfo        \n                             1                              2 \nCallao                         Carmen de la Legua             \n                             1                              1 \nLa Perla                       La Punta                       \n                             2                              2 \n\nWithin cluster sum of squares by cluster:\n[1] 67.25282 36.46842\n (between_SS / total_SS =  55.1 %)\n\nAvailable components:\n\n [1] \"cluster\"      \"centers\"      \"totss\"        \"withinss\"     \"tot.withinss\"\n [6] \"betweenss\"    \"size\"         \"iter\"         \"ifault\"       \"crit\"        \n[11] \"bestk\"       \n```\n:::\n\n```{.r .cell-code}\n# Criterio anchura de silueta\nkmeansruns(scale(distritos),criterion=\"asw\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nK-means clustering with 2 clusters of sizes 19, 15\n\nCluster means:\n    ocu_vivi    pobpjov   sinelect    sinagua    pea1619    pocprin     peam15\n1 -0.5238407 -0.5949751 -0.7071806 -0.6300979 -0.7877401 -0.6061537 -0.6647556\n2  0.6635316  0.7536352  0.8957621  0.7981240  0.9978041  0.7677947  0.8420238\n\nClustering vector:\nAte                            Barranco                       \n                             2                              1 \nBreña                          Carabayllo                     \n                             1                              2 \nComas                          Chorrillos                     \n                             2                              2 \nAgustino                       Independencia                  \n                             2                              2 \nJesús María                    La Victoria                    \n                             1                              1 \nLima                           Lince                          \n                             1                              1 \nLos Olivos                     Lurigancho-Chosica             \n                             2                              2 \nMagdalena del Mar              Pueblo Libre                   \n                             1                              1 \nMiraflores                     Rímac                          \n                             1                              1 \nSan Borja                      San Isidro                     \n                             1                              1 \nSan Juan de Lurigancho         San Juan de Miraflores         \n                             2                              2 \nSan Luis                       San Martin de Porres           \n                             1                              2 \nSan Miguel                     Santa Anita                    \n                             1                              2 \nSurco                          Surquillo                      \n                             1                              1 \nVilla el Salvador              Villa María del Triunfo        \n                             2                              1 \nCallao                         Carmen de la Legua             \n                             2                              2 \nLa Perla                       La Punta                       \n                             1                              1 \n\nWithin cluster sum of squares by cluster:\n[1] 36.46842 67.25282\n (between_SS / total_SS =  55.1 %)\n\nAvailable components:\n\n [1] \"cluster\"      \"centers\"      \"totss\"        \"withinss\"     \"tot.withinss\"\n [6] \"betweenss\"    \"size\"         \"iter\"         \"ifault\"       \"crit\"        \n[11] \"bestk\"       \n```\n:::\n\n```{.r .cell-code}\nres=kmeans(scale(distritos),2, nstart = 50)\nplotcluster(distritos,res$cluster)\n```\n\n::: {.cell-output-display}\n![](clase-14_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n\n```{.r .cell-code}\nclusplot(\n  distritos,res$cluster, color = TRUE,\n  shade = TRUE, labels =2,lines=0,\n  main =\"Gráfico de Conglomerados\"\n)\n```\n\n::: {.cell-output-display}\n![](clase-14_files/figure-html/unnamed-chunk-7-3.png){width=672}\n:::\n:::\n\n\n**K=2 sería el valor idóneo para el número de clusters**, según este criterio.\n\n### Perfilado y caracterización de clusters\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Adicionar los cluster a la base de datos\ndistritos.new<-cbind(distritos,res$cluster)\ncolnames(distritos.new)<-c(colnames(distritos.new[,-length(distritos.new)]), \"cluster.km\")\nhead(distritos.new)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                               ocu_vivi pobpjov sinelect sinagua pea1619\nAte                                1.15     5.3    27.60   51.10     3.9\nBarranco                           1.09     4.5     1.59    8.32     0.8\nBreña                              1.08     4.4     2.20   23.15     0.9\nCarabayllo                         1.10     5.1    30.13   38.09     4.5\nComas                              1.20     5.9    10.92   24.27     3.8\nChorrillos                         1.15     5.5    16.77   37.11     3.2\n                               pocprin peam15 cluster.km\nAte                                1.1  63.48          2\nBarranco                           3.9  33.48          1\nBreña                              4.0  37.89          1\nCarabayllo                        12.6  63.65          2\nComas                              9.4  60.37          2\nChorrillos                        10.6  18.78          2\n```\n:::\n\n```{.r .cell-code}\n# Tabla de medias\nmed<-aggregate(x = distritos.new[,1:7],by = list(distritos.new$cluster.km),FUN = mean)\nmed\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Group.1 ocu_vivi  pobpjov  sinelect  sinagua   pea1619  pocprin   peam15\n1       1 1.080526 4.631579  2.447895 15.80895 0.8736842 5.057895 32.16526\n2       2 1.160000 5.520000 18.856000 37.02400 3.7946667 9.780000 56.84000\n```\n:::\n\n```{.r .cell-code}\n# Describir variables\npar(mfrow=c(2,4))\nfor (i in 1:length(distritos.new[,1:7])) {\nboxplot(distritos.new[,i]~distritos.new$cluster.km, main=names(distritos.new[i]), type=\"l\")\n}\npar(mfrow=c(1,1))\n```\n\n::: {.cell-output-display}\n![](clase-14_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n::: {#prp}\n\nPara el caso de **dos conglomerados**, \nla conglomeración es **más adecuada** cuando\nel ratio **between_SS / total_SS** es muy cercano a $1$ .\n\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres$betweenss / (res$betweenss + res$tot.withins)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.5509903\n```\n:::\n:::\n\n\n### Silueta\n\n- Representa **qué tan bien está agrupada la observación, en su conglomerado respectivo**.\n- **Mayor silueta, mayor similitud de la observación a las  observaciones en su conglomerado**.\n- Está entre $-1$  y $1$, pero un **valor negativo**\nindica que la observación no pertenece a un cluster adecuado.\n\n- El ancho de silueta de la i-ésima observación es definida\npor $\\text{ sil }_i = \\dfrac{b_i - a_i}{max \\left( a_i, b_i \\right)}$ .\n\n- Definiciones:\n    - $a_i$ : **Distancia promedio** entre la observación $i$ \n    y todas las otras observaciones en el **mismo conglomerado que i**.\n    - $b_i$: Denota la **mínima distancia promedio** de $i$ a las\n    observaciones que están en otros conglomerados.\n\n- **Silueta con valor 1** indica que esa observación está\nperfectamente asignada en su cluster respectivo.\n\n- La **medida de silueta** se define como\n$\\bar{s} = \\dfrac{1}{n} \\displaystyle{ \\sum_{1}^{n} \\text{ sil}_i }$ \n\n\n### Criterio de Calinski-Harabasz\n\n- Valor por calcular:\n\n$$\n\\dfrac{(n-k) \\times \\text{ Suma de cuadrados entre los grupos }}{(k-1) \\times \\text{ Suma de cuadrados dentro de los grupos }}\n$$\n\n- **Mayor valor, mejor agrupación de los objetos en conglomerados**.\n\n::: {#prp}\n\nAmbos criterios, silueta y Calinski-Harabasz, sirven\npara cualquier tipo de conglomeración, no solo para K-means.\n\n:::\n\n\n## Notas finales\n\n- Como falta cubrir el tema **conglomerados jerárquicos**,\nel profesor lo grabará y nos compartirá la grabación, como parte\ndel material del curso por ser **evaluado**.\n\n- Próxima semana nos pasan la nota de la Tarea 1.\n\n- **Sábado 9, a la hora de clase, de manera sincrónica**,\n**será el examen final**. La metodología es parecida al parcial.\n\n- **La tarea 2 se puede entregar hasta el domingo 10**.\n",
    "supporting": [
      "clase-14_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}